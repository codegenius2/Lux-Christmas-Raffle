[{"/home/matheo/dev/testCrossmint/client/src/index.js":"1","/home/matheo/dev/testCrossmint/client/src/App.jsx":"2","/home/matheo/dev/testCrossmint/client/src/components/Home.jsx":"3","/home/matheo/dev/testCrossmint/client/src/contexts/EthContext/index.js":"4","/home/matheo/dev/testCrossmint/client/src/contexts/EthContext/useEth.js":"5","/home/matheo/dev/testCrossmint/client/src/components/Footer/Footer.js":"6","/home/matheo/dev/testCrossmint/client/src/components/Navbar/Navbar.js":"7","/home/matheo/dev/testCrossmint/client/src/components/AdminPage/AdminPage.js":"8","/home/matheo/dev/testCrossmint/client/src/components/MintPage/MintPage.js":"9","/home/matheo/dev/testCrossmint/client/src/contexts/EthContext/EthContext.js":"10","/home/matheo/dev/testCrossmint/client/src/contexts/EthContext/state.js":"11","/home/matheo/dev/testCrossmint/client/src/contexts/EthContext/EthProvider.jsx":"12"},{"size":211,"mtime":1670453567042,"results":"13","hashOfConfig":"14"},{"size":204,"mtime":1670453567032,"results":"15","hashOfConfig":"14"},{"size":4478,"mtime":1670518594506,"results":"16","hashOfConfig":"14"},{"size":181,"mtime":1669136236617,"results":"17","hashOfConfig":"14"},{"size":145,"mtime":1669136236637,"results":"18","hashOfConfig":"14"},{"size":1356,"mtime":1670483345183,"results":"19","hashOfConfig":"14"},{"size":1294,"mtime":1670483793413,"results":"20","hashOfConfig":"14"},{"size":4743,"mtime":1670516187196,"results":"21","hashOfConfig":"14"},{"size":1582,"mtime":1670521846596,"results":"22","hashOfConfig":"14"},{"size":104,"mtime":1669136236617,"results":"23","hashOfConfig":"14"},{"size":478,"mtime":1669901627024,"results":"24","hashOfConfig":"14"},{"size":2267,"mtime":1670453755302,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rig2j4",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/matheo/dev/testCrossmint/client/src/index.js",[],"/home/matheo/dev/testCrossmint/client/src/App.jsx",[],"/home/matheo/dev/testCrossmint/client/src/components/Home.jsx",["54"],"import useEth from \"../contexts/EthContext/useEth\";\nimport { useState } from \"react\";\nimport \"./Home.css\";\nimport React from \"react\";\nimport Navbar from \"./Navbar/Navbar\";\nimport Footer from \"./Footer/Footer\";\nimport MintPage from \"./MintPage/MintPage\";\nimport AdminPage from \"./AdminPage/AdminPage\";\nimport web3 from \"web3\";\n\nexport default function Home() {\n  const {\n    state: { contract, accounts, isOwner, isMintOn, mintPrice },\n  } = useEth();\n\n  const [number, setNumber] = useState(\"choose\");\n  // Chaque composant doit gérer son state\n  // Informations non nécéssaires pour admin\n  // Number dans AdminPage changer le nom de variable\n  // Mettre la fonction mint sur admin et sur mintpage (client)\n  // si logique differente entre les deux composants vaut mieux les séparer\n  // si même logique sur les deux --> home.jsx\n\n  const handleNumberChange = (e) => {\n    setNumber(parseInt(e.target.value));\n  };\n\n  const mint = () => {\n    if (number == \"choose\"){\n      contract.methods\n        .mint(number, accounts[0])\n        .send({ from: accounts[0], value: mintPrice });\n    }\n  };\n\n  const [uri, setURI] = useState();\n  const handleSetURI = (e) => {\n    setURI(e.target.value);\n  };\n\n  const setBaseURI = async () => {\n    await contract.methods.setBaseURI(uri).send({ from: accounts[0] });\n  };\n\n  const [currentUri, setCurrentUri] = useState(\"?\");\n\n  const getURI = async () => {\n    const value = await contract.methods\n      .tokenURI(0)\n      .call({ from: accounts[0] });\n    setCurrentUri(value);\n  };\n\n  const [price, setPrice] = useState();\n  const handleChangePrice = (e) => {\n    if (e.target.value < 0) {\n      setPrice(0);\n    } else {\n      setPrice(parseInt(e.target.value));\n    }\n  };\n  const changePrice = async () => {\n    const newPrice = web3.utils.toBN(price);\n    await contract.methods.changePrice(newPrice).send({ from: accounts[0] });\n  };\n  const enableMint = async () => {\n    await contract.methods.enableMint().send({ from: accounts[0] });\n  };\n  const stopMint = async () => {\n    await contract.methods.stopMint().send({ from: accounts[0] });\n  };\n\n  const mintPartnership = async () => {\n    await contract.methods.mintPartnership(number).send({ from: accounts[0] });\n  };\n\n  const mintPriceInETH = mintPrice / 1000000000000000000;\n  const [trackNumber, setTrackNumber] = useState(\"?\");\n\n  const checkNumberOfNftMinted = async () => {\n    const value = await contract.methods\n      .checkNumberOfNftMinted()\n      .call({ from: accounts[0] });\n    setTrackNumber(value);\n  };\n  const [currentPrice, setCurrentPrice] = useState(mintPriceInETH);\n\n  const checkPrice = async () => {\n    const value = await contract.methods\n      .checkPrice()\n      .call({ from: accounts[0] });\n    const temp = value / 1000000000000000000;\n    setCurrentPrice(temp);\n  };\n\n  return (\n    <>\n      <section className=\"page-mint\">\n        <Navbar />\n        <div className=\"page-container\">\n          <div className=\"container-bis\">\n            <section className=\"landing-page-container\">\n              Christmas Collectible Raffle\n            </section>\n            <div className=\"mintpage-container\">\n              {isOwner ? (\n                <AdminPage\n                  handleSetURI={handleSetURI}\n                  uri={uri}\n                  setBaseURI={setBaseURI}\n                  currentUri={currentUri}\n                  getURI={getURI}\n                  handleChangePrice={handleChangePrice}\n                  price={price}\n                  isMintOn={isMintOn}\n                  stopMint={stopMint}\n                  enableMint={enableMint}\n                  handleNumberChange={handleNumberChange}\n                  number={number}\n                  mintPartnership={mintPartnership}\n                  changePrice={changePrice}\n                  mintPriceInETH={mintPriceInETH}\n                  currentPrice={currentPrice}\n                  checkPrice={checkPrice}\n                  checkNumberOfNftMinted={checkNumberOfNftMinted}\n                  trackNumber={trackNumber}\n                />\n              ) : (\n                <MintPage\n                  isMintOn={isMintOn}\n                  mintPrice={mintPrice}\n                  handleNumberChange={handleNumberChange}\n                  number={number}\n                  mint={mint}\n                  mintPriceInETH={mintPriceInETH}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </section>\n    </>\n  );\n}\n","/home/matheo/dev/testCrossmint/client/src/contexts/EthContext/index.js",[],"/home/matheo/dev/testCrossmint/client/src/contexts/EthContext/useEth.js",[],"/home/matheo/dev/testCrossmint/client/src/components/Footer/Footer.js",["55","56","57"],"import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faDiscord,\n  faInstagram,\n  faFacebook,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { faEnvelope } from \"@fortawesome/free-regular-svg-icons\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return (\n    <footer>\n      <section className=\"footer-mint\">\n        <span>Rejoignez nous sur nos réseaux !</span>\n        <div className=\"icons-container\">\n          <a href=\"mailto:luxresort@metalyde.com\"> \n            <FontAwesomeIcon icon={faEnvelope} className=\"icons-socials\" />\n          </a>\n          <a href=\"https://discord.com/invite/YbnVGG3JdP\" target={\"_blank\"}>\n            <FontAwesomeIcon icon={faDiscord} className=\"icons-socials\" />\n          </a>\n          <a href=\"https://www.instagram.com/luxresorts/\" target={\"_blank\"}>\n            <FontAwesomeIcon icon={faInstagram} className=\"icons-socials\" />\n          </a>\n          <a href=\"https://www.facebook.com/luxresorts/\" target={\"_blank\"}>\n            <FontAwesomeIcon icon={faFacebook} className=\"icons-socials\" />\n          </a>\n        </div>\n      </section>\n      <section className=\"copyright-container\">\n        <p className=\"copyright-text\">\n          Copyright © 2022 LUX* Tous droits réservés\n        </p>\n      </section>\n    </footer>\n  );\n}\n\nexport default Footer;\n",["58","59"],"/home/matheo/dev/testCrossmint/client/src/components/Navbar/Navbar.js",[],"/home/matheo/dev/testCrossmint/client/src/components/AdminPage/AdminPage.js",["60","61"],"import React from \"react\";\nimport \"./AdminPage.css\";\n\nfunction AdminPage({\n  handleSetURI,\n  uri,\n  setBaseURI,\n  currentUri,\n  getURI,\n  handleChangePrice,\n  price,\n  isMintOn,\n  stopMint,\n  enableMint,\n  handleNumberChange,\n  number,\n  mintPartnership,\n  changePrice,\n  currentPrice,\n  checkPrice,\n  checkNumberOfNftMinted,\n  trackNumber,\n  mintPriceInETH,\n}) {\n  var count = 0;\n  const handleCheckPrice = async () => {\n    await checkPrice();\n    count = 1;\n  };\n\n  return (\n    <>\n      <section className=\"admin-section\">\n        <h2>Panneau d'administration</h2>\n        <div className=\"admin-container\">\n          <div className=\"admin-wrap\">\n            <div className=\"admin-content-1\">\n              <div className=\"admin-content-1-container\">\n                <div className=\"admin-content-1-wrap\">\n                  <span>\n                    Le mint des NFt est {isMintOn ? \"en cours !\" : \"en pause\"}\n                  </span>\n                  {isMintOn ? (\n                    <button onClick={stopMint}>Stop mint</button>\n                  ) : (\n                    <button onClick={enableMint}>Start mint</button>\n                  )}\n                </div>\n              </div>\n              <div className=\"admin-content-1-container\">\n                <div className=\"admin-content-1-wrap\">\n                  <span>Nft minté : {trackNumber} / 1000 </span>\n                  <button onClick={checkNumberOfNftMinted}>Check</button>\n                </div>\n              </div>\n              <div className=\"admin-content-1-container\">\n                <div className=\"admin-content-1-wrap\">\n                  <span>Mint partenaires</span>\n                  <div>\n                    <select onChange={handleNumberChange} value={number}>\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                      <option value=\"5\">5</option>\n                      <option value=\"6\">6</option>\n                      <option value=\"7\">7</option>\n                      <option value=\"8\">8</option>\n                      <option value=\"9\">9</option>\n                      <option value=\"10\">10</option>\n                    </select>\n                    <button onClick={mintPartnership}>Mint</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"admin-content-2\">\n              <div className=\"admin-content-2-price\">\n                <div className=\"admin-content-2-price-container\">\n                  <div className=\"admin-content-2-price-wrap\">\n                    <span>\n                      Le prix du mint est de{\" \"}\n                      {count == 0 ? mintPriceInETH : currentPrice} ETH\n                    </span>\n                    <button onClick={handleCheckPrice}>Check price</button>\n                  </div>\n                </div>\n                <div className=\"admin-content-2-price-container\">\n                  <div className=\"admin-content-2-price-wrap\">\n                    Change price\n                    <a href=\"https://eth-converter.com/\" target=\"_blank\">\n                      ( Convert eth in wei )\n                    </a>\n                    <div>\n                      <input\n                        onChange={handleChangePrice}\n                        type=\"number\"\n                        value={price}\n                        placeholder=\"new price in wei\"\n                      />\n                      <button onClick={changePrice}>Set new price</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"admin-content-2-uri\">\n                <div className=\"admin-content-2-container\">\n                  <div className=\"admin-content-2-wrap\">\n                    <span>Current URI : {currentUri}</span>\n                    <button onClick={getURI}>Get URI</button>\n                  </div>\n                </div>\n                <div className=\"admin-content-2-container\">\n                  <div className=\"admin-content-2-wrap\">\n                    <span>Change URI</span>\n                    <div>\n                      <input\n                        onChange={handleSetURI}\n                        value={uri}\n                        type=\"text\"\n                        placeholder=\"new uri\"\n                      />\n                      <button onClick={setBaseURI}>Set new URI</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default AdminPage;\n","/home/matheo/dev/testCrossmint/client/src/components/MintPage/MintPage.js",[],"/home/matheo/dev/testCrossmint/client/src/contexts/EthContext/EthContext.js",[],"/home/matheo/dev/testCrossmint/client/src/contexts/EthContext/state.js",[],"/home/matheo/dev/testCrossmint/client/src/contexts/EthContext/EthProvider.jsx",[],{"ruleId":"62","severity":1,"message":"63","line":29,"column":16,"nodeType":"64","messageId":"65","endLine":29,"endColumn":18},{"ruleId":"66","severity":1,"message":"67","line":20,"column":11,"nodeType":"68","messageId":"69","endLine":20,"endColumn":77,"fix":"70"},{"ruleId":"66","severity":1,"message":"67","line":23,"column":11,"nodeType":"68","messageId":"69","endLine":23,"endColumn":77,"fix":"71"},{"ruleId":"66","severity":1,"message":"67","line":26,"column":11,"nodeType":"68","messageId":"69","endLine":26,"endColumn":76,"fix":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"62","severity":1,"message":"63","line":83,"column":30,"nodeType":"64","messageId":"65","endLine":83,"endColumn":32},{"ruleId":"66","severity":1,"message":"67","line":91,"column":21,"nodeType":"68","messageId":"69","endLine":91,"endColumn":74,"fix":"77"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"78","text":"79"},{"range":"80","text":"79"},{"range":"81","text":"79"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],{"range":"84","text":"79"},[677,677]," rel=\"noreferrer\"",[844,844],[1012,1012],"no-global-assign","no-unsafe-negation",[3211,3211]]